NAME = EVIL
BUILD_DIR ?= ./BUILD-$(NAME)
TMP_DIR ?= ./TMP
SRC_DIRS ?= ./src
DOCS_DIR ?= ./docs
FILES_DIR ?= ./dist
RELEASE_DIR ?= ./RELEASE-$(NAME)
INSTALL_BASE ?= /Volumes/devnext
INSTALL_DIR ?= $(INSTALL_BASE)/$(NAME)

Z88DK_CRT = 1

#DEBUGFLAGS := --list --c-code-in-asm
DEBUGFLAGS =

CC=zcc
CCFLAGS=+zxn -vn -O3 -startup=$(Z88DK_CRT) -clib=new -preserve -pragma-include:zpragma.inc
CZFLAGS=-Cz="--clean --fullsize --main-fence 0xC000"
LDFLAGS=-m -lm
INCFLAGS=

SH := /bin/sh
ECHO := @/bin/echo -n
CD := cd
RSYNC := rsync -parv
FIGLET := `which figlet`
CAT := @`which cat`
SED := @`which sed`
LS := ls -l@k
VERSION := `cat VERSION`
DATE := `which date`
MKDIR := mkdir -p
RM := rm -rfv
LSH := ls -larth
CP := @cp -rv
MV := @mv -v

all: dirs deps dotn

clean:
	$(RM) $(BUILD_DIR)
	$(RM) $(TMP_DIR)
	$(RM) $(NAME).map
	$(RM) $(NAME)_*.bin
	$(RM) cmake-build-debug
	$(RM) RELEASE/*
	$(RM) NAME

incs: dirs
	$(ECHO) $(NAME) > NAME

	$(ECHO) `git rev-list --all --count` > $(TMP_DIR)/BUILD
	$(ECHO) "#" > $(TMP_DIR)/BANNER
	$(CAT) $(TMP_DIR)/BUILD >> $(TMP_DIR)/BANNER
	$(ECHO) " RUNNING" >> $(TMP_DIR)/BANNER
	$(CAT)  $(TMP_DIR)/BANNER | $(FIGLET)

	cat templates/build_top.h > src/common/build.h

	$(ECHO) "// Autogenerated on " >>  src/common/build.h
	$(DATE) >>  src/common/build.h

	cat templates/build_build.h >> src/common/build.h
	$(CAT) $(TMP_DIR)/BUILD >> src/common/build.h
	echo "\"" >> src/common/build.h

	cat templates/build_ver.h >> src/common/build.h
	$(CAT) VERSION >> src/common/build.h
	echo "\"" >> src/common/build.h

	cat templates/build_bottom.h >> src/common/build.h

	$(CAT) VERSION > $(TMP_DIR)/BANNER
	$(ECHO) " done!" >> $(TMP_DIR)/BANNER
	$(CAT) $(TMP_DIR)/BANNER | figlet

deps: incs

dirs:
	$(MKDIR) $(BUILD_DIR)
	$(MKDIR) $(TMP_DIR)

bank_47:
	$(CC) $(CCFLAGS) -c $(DEBUG) $(INCFLAGS) $(BUILDFLAGS) \
		--codesegBANK_47 --constsegBANK_47 \
		--datasegBANK_47 --bsssegBANK_47   \
		@src/BANK_system/system.lst -o$(TMP_DIR)/BANK_system.o

banks: dirs deps bank_47

assemble: banks
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/$(NAME).lst -o$(NAME) -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) $(NAME) $(BUILD_DIR)/$(NAME)

dotn: banks assemble

install-dir:
	$(MKDIR) $(INSTALL_DIR)

update:
	$(CP) $(BUILD_DIR)/$(NAME) $(INSTALL_BASE)/dot/$(NAME)

install: install-dir update

deploy: all install

q: dotn
	$(CP) $(BUILD_DIR)/$(NAME) $(INSTALL_BASE)/dot/$(NAME)

qq: assemble update
